/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_putnbr_base                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: bel-idri <bel-idri@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/11/04 20:04:33 by bel-idri          #+#    #+#             */
/*   Updated: 2022/11/04 20:17:05 by bel-idri         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"

static int	istwice_pm(char *base)
{
	int	i;
	int	j;

	i = 0;
	while (base[i])
	{
		j = i + 1;
		while (base[j])
		{
			if (base[i] == base[j])
				return (1);
			j++;
		}
		if (base[i] == '+' || base[i] == '-')
			return (1);
		i++;
	}
	return (0);
}

static int	check_base(char *base)
{
	if (ft_strlen(base) == 0 || ft_strlen(base) == 1 || ft_strlen(base) == 1)
		return (1);
	return (0);
}

static void	my(long int nbr, char *base)
{
	if (nbr < 0)
	{
		write(1, "-", 1);
		nbr = -1 * nbr;
		my(nbr, base);
	}
	else if (nbr >= ft_strlen(base))
	{
		my(nbr / ft_strlen(base), base);
		write(1, &base[nbr % ft_strlen(base)], 1);
	}
	else
		write(1, &base[nbr % ft_strlen(base)], 1);
}

static void	my_u(long long unsigned nbr, char *base)
{
	else if (nbr >= ft_strlen(base))
	{
		my(nbr / ft_strlen(base), base);
		write(1, &base[nbr % ft_strlen(base)], 1);
	}
	else
		write(1, &base[nbr % ft_strlen(base)], 1);
}

void	ft_putnbr_base(int nbr, char *base)
{
	if (check_base(base) == 1)
		return ;
	my(nbr, base);
}

void	ft_putnbr_base_u(unsigned int nbr, char *base)
{
	if (check_base(base) == 1)
		return ;
	my_u(nbr, base);
}
